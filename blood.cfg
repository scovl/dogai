# Bloodstrike Detection Configuration
# Unified configuration file for DogAI
# Model: YOLOv8-based blood detection model (PyTorch 2.2.1)
# Input: [1, 3, 640, 640] - Output: [1, 5, 8400]

[Model]
# Model input size (must match ONNX model specification)
input_width = 640
input_height = 640
# Model input channels (RGB)
input_channels = 3
# Model output format: [batch, 5, 8400] where 5 = [x, y, w, h, confidence]
output_format = 5
# Number of detection anchors (8400 from model output)
num_anchors = 8400
# Confidence threshold for blood detection
conf_threshold = 0.25
# IoU threshold for NMS
iou_threshold = 0.45
# Model path
model_path = models/blood.onnx
# Model producer info (PyTorch 2.2.1)
model_producer = pytorch
model_version = 2.2.1
# ONNX IR version
onnx_ir_version = 8
# ONNX opset version
onnx_opset_version = 17

[Detection]
# Blood detection specific settings
# Minimum blood area (pixels) to consider valid detection
min_blood_area = 50
# Maximum blood area (pixels) to avoid false positives
max_blood_area = 10000
# Blood color range (HSV format for better detection)
blood_hue_min = 0
blood_hue_max = 10
blood_saturation_min = 50
blood_saturation_max = 255
blood_value_min = 50
blood_value_max = 255
# Enable morphological operations for noise reduction
enable_morphology = true
# Kernel size for morphological operations
morph_kernel_size = 3
# Enable contour filtering
enable_contour_filtering = true
# Minimum contour area
min_contour_area = 30

[Performance]
# Target FPS (120 for high performance, 144 for maximum)
target_fps = 120
# Performance mode (normal/maximum/ultra)
performance_mode = normal
# Enable optimizations
use_optimizations = true
# FPS measurement interval (frames)
fps_measurement_interval = 30
# Enable detailed FPS logging
enable_fps_logging = true
# Enable model warmup
enable_model_warmup = true
# Number of warmup iterations
warmup_iterations = 10
# Enable batch processing for multiple detections
enable_batch_processing = false
# Batch size (1 for real-time, higher for batch processing)
batch_size = 1

[Display]
# Box color (BGR format) - Red for blood
box_color = 0, 0, 255
# Text color (BGR format) - White
text_color = 255, 255, 255
# Box thickness
box_thickness = 2
# Text scale
text_scale = 0.5
# Show confidence score
show_confidence = true
# Show class name
show_class_name = true
# Blood detection label
blood_label = "BLOOD"
# Enable bounding box smoothing
enable_box_smoothing = true
# Smoothing factor (0.0-1.0)
smoothing_factor = 0.7

[Capture]
# FOV size for detection (optimized for blood detection)
fov_width = 400
fov_height = 400
# Capture quality (1-100)
capture_quality = 90
# Enable hardware acceleration for capture
hw_acceleration = true
# Capture frame rate
capture_fps = 60
# Enable frame skipping for performance
enable_frame_skip = false
# Frame skip ratio (1 = no skip, 2 = skip every other frame)
frame_skip_ratio = 1

[CPU]
# Number of threads for processing
num_threads = 8
# Enable parallel processing
parallel_processing = true
# Optimization level (0-3)
optimization_level = 3
# Enable SIMD optimizations
enable_simd = true
# Enable OpenMP
enable_openmp = true
# Thread affinity (0 = auto, 1 = performance cores first)
thread_affinity = 1

[Memory]
# Enable memory pooling
enable_memory_pooling = true
# Memory pool size (MB)
memory_pool_size = 512
# Enable tensor reuse
enable_tensor_reuse = true
# Maximum tensor cache size
tensor_cache_size = 256

[Maximum_Performance]
# Ultra high FPS settings (144 FPS)
target_fps = 144
# Smaller input size for maximum speed (still compatible with model)
input_width = 512
input_height = 512
# Higher confidence threshold for fewer detections
conf_threshold = 0.35
# Smaller FOV for faster processing
fov_width = 320
fov_height = 320
# Lower capture quality for speed
capture_quality = 80
# Enable aggressive optimization
aggressive_optimization = true
# Reduce detection area for speed
enable_roi_detection = true
# ROI center offset (percentage from screen center)
roi_center_x = 0.5
roi_center_y = 0.5
# ROI size (percentage of screen)
roi_width = 0.6
roi_height = 0.6

[Advanced]
# Enable model quantization (if supported)
enable_quantization = false
# Quantization type (int8/fp16)
quantization_type = int8
# Enable model fusion
enable_model_fusion = true
# Enable operator fusion
enable_operator_fusion = true
# Enable graph optimization
enable_graph_optimization = true
# Enable constant folding
enable_constant_folding = true
# Enable dead code elimination
enable_dead_code_elimination = true

[Debug]
# Enable debug mode
debug_mode = false
# Enable model input/output logging
enable_io_logging = false
# Enable performance profiling
enable_profiling = false
# Enable memory usage tracking
enable_memory_tracking = false
# Log level (0=error, 1=warning, 2=info, 3=debug)
log_level = 1 